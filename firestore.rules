rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function isValidTask() {
      let task = request.resource.data;
      return task.size() == 4 
        && task.title is string 
        && task.title.size() > 0 
        && task.title.size() <= 100
        && task.description is string
        && task.status in ['pending', 'in-progress', 'completed']
        && task.dueDate is timestamp;
    }

    // Tasks collection rules
    match /tasks/{taskId} {
      allow read: if isAuthenticated() && isOwner(resource.data.userId);
      allow create: if isAuthenticated() 
        && isValidTask() 
        && request.resource.data.userId == request.auth.uid;
      allow update: if isAuthenticated() 
        && isOwner(resource.data.userId) 
        && isValidTask();
      allow delete: if isAuthenticated() && isOwner(resource.data.userId);
    }

    // User profiles collection rules
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && isOwner(userId);
    }
  }
} 